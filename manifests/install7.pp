# jdk7::instal7
#
# On Linux low entropy can cause certain operations to be very slow.
# Encryption operations need entropy to ensure randomness. Entropy is 
# generated by the OS when you use the keyboard, the mouse or the disk.
#
# If an encryption operation is missing entropy it will wait until 
# enough is generated.
#
# three options 
#  use rngd service (this class)
#  set java.security in JDK ( jre/lib/security )
#  set -Djava.security.egd=file:/dev/./urandom param
#  
define jdk7::install7( $version         =  "7u25" , 
                       $fullVersion     =  "jdk1.7.0_25",
											 $x64             =  true,
											 $downloadDir     =  '/install',
											 $urandomJavaFix  =  true, 
											) {

    notify {"install7.pp ${title} ${version}":}

    if $x64 == true {
      $type = 'x64'
    } else {
      $type = 'i586'
    }

    case $operatingsystem {
      CentOS, RedHat, OracleLinux, Ubuntu, Debian, SLES: { 
        $installVersion   = "linux"
        $installExtension = ".tar.gz"
        $path             = '/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:'

        $user             = "root"
        $group            = "root"
      }
      default: { 
        fail("Unrecognized operating system") 
      }
    }
     
    $jdkfile =  "jdk-${version}-${installVersion}-${type}${installExtension}"

    File { 
      replace => false,
    }

    exec { "create ${$downloadDir} directory":
             command => "mkdir -p ${$downloadDir}",
             unless  => "test -d ${$downloadDir}",
             user    => 'root',
             path    => $path,
    }


    # check install folder
    if ! defined(File[$downloadDir]) {
      file { $downloadDir :
        mode    => 0777,
        path    => $downloadDir,
        ensure  => directory,
        require => Exec["create ${$downloadDir} directory"],
      }
    }
    
    # download jdk to client
    if ! defined(File["${downloadDir}/${jdkfile}"]) {
     file {"${downloadDir}/${jdkfile}":
        path    => "${downloadDir}/${jdkfile}",
        ensure  => present,
        source  => "puppet:///modules/jdk7/${jdkfile}",
        require => [File[$downloadDir], Exec["create ${$downloadDir} directory"]],
     } 
    }
    # install on client 
    javaexec {"jdkexec ${title} ${version}": 
          path        => $downloadDir, 
          fullVersion => $fullVersion,
          jdkfile     => $jdkfile,
          user        => $user,
          group       => $group,
          require     => File["${downloadDir}/${jdkfile}"],
    }
    
    if ( $urandomJavaFix  ==  true ) {
	    exec { "set urandom ${fullVersion}":
	        command => "sed -i -e's/securerandom.source=file:\/dev\/urandom/securerandom.source=file:\/dev\/.\/urandom/g' /usr/java/${fullVersion}/jre/lib/security/java.security",
	        unless  => "/bin/grep '^securerandom.source=file:/dev/./urandom' /usr/java/${fullVersion}/jre/lib/security/java.security",
	        require => Javaexec["jdkexec ${title} ${version}"],
          user    => 'root',
          path    => $path,
	    }
    }
    
}